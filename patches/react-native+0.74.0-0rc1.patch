diff --git a/node_modules/react-native/Libraries/Components/Pressable/Pressable.js b/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
index bd40cd6..fadb13b 100644
--- a/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
+++ b/node_modules/react-native/Libraries/Components/Pressable/Pressable.js
@@ -388,19 +388,15 @@ function Pressable(props: Props, forwardedRef): React.Node {
           setFocused(false);
         }
       }
-      // Use these on tvOS only. Android press events go to onClick() so we don't
-      // need to call onPress() again here
-      if (Platform.isTVOS) {
-        // $FlowFixMe[prop-missing]
-        if (focused && evt.eventType === 'select') {
-          // $FlowFixMe[incompatible-exact]
-          onPress && onPress(evt);
-        }
-        // $FlowFixMe[prop-missing]
-        if (focused && evt.eventType === 'longSelect') {
-          // $FlowFixMe[incompatible-exact]
-          onLongPress && onLongPress(evt);
-        }
+      // $FlowFixMe[prop-missing]
+      if (focused && evt.eventType === 'select') {
+        // $FlowFixMe[incompatible-exact]
+        onPress && onPress(evt);
+      }
+      // $FlowFixMe[prop-missing]
+      if (focused && evt.eventType === 'longSelect') {
+        // $FlowFixMe[incompatible-exact]
+        onLongPress && onLongPress(evt);
       }
     },
     [focused, onBlur, onFocus, onLongPress, onPress, focusable, isTVSelectable],
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TVTouchable.js b/node_modules/react-native/Libraries/Components/Touchable/TVTouchable.js
index 04617b8..c8e1e01 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TVTouchable.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TVTouchable.js
@@ -54,7 +54,7 @@ export default class TVTouchable {
             config.onPress(tvData);
           }
         } else if (tvData.eventType === 'longSelect') {
-          if (Platform.OS !== 'android' && !config.getDisabled()) {
+          if (!config.getDisabled()) {
             config.onLongPress(tvData);
           }
         }
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
index 74fbe3a..725cc6b 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js
@@ -399,12 +399,12 @@ class TouchableHighlight extends React.Component<Props, State> {
           }
         },
         onPress: event => {
-          if (this.props.onPress != null && Platform.OS !== 'android') {
+          if (this.props.onPress != null) {
             this.props.onPress(event);
           }
         },
         onLongPress: event => {
-          if (this.props.onLongPress != null && Platform.OS !== 'android') {
+          if (this.props.onLongPress != null) {
             this.props.onLongPress(event);
           }
         },
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
index e2282cf..87eaf08 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js
@@ -356,12 +356,12 @@ class TouchableNativeFeedback extends React.Component<Props, State> {
           }
         },
         onPress: event => {
-          if (this.props.onPress != null && Platform.OS !== 'android') {
+          if (this.props.onPress != null) {
             this.props.onPress(event);
           }
         },
         onLongPress: event => {
-          if (this.props.onLongPress != null && Platform.OS !== 'android') {
+          if (this.props.onLongPress != null) {
             this.props.onLongPress(event);
           }
         },
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
index 27b7dfd..42624cd 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js
@@ -328,12 +328,12 @@ class TouchableOpacity extends React.Component<Props, State> {
           }
         },
         onPress: event => {
-          if (this.props.onPress != null && Platform.OS !== 'android') {
+          if (this.props.onPress != null) {
             this.props.onPress(event);
           }
         },
         onLongPress: event => {
-          if (this.props.onLongPress != null && Platform.OS !== 'android') {
+          if (this.props.onLongPress != null) {
             this.props.onLongPress(event);
           }
         },
diff --git a/node_modules/react-native/Libraries/Pressability/Pressability.js b/node_modules/react-native/Libraries/Pressability/Pressability.js
index 940249a..aee23d3 100644
--- a/node_modules/react-native/Libraries/Pressability/Pressability.js
+++ b/node_modules/react-native/Libraries/Pressability/Pressability.js
@@ -582,6 +582,11 @@ export default class Pressability {
           return;
         }
 
+        // Remove spurious onClick events with empty event object generated on Android TV
+        if (Platform.isTV && !event?.eventType) {
+          return;
+        }
+
         const {onPress, disabled} = this._config;
         if (onPress != null && disabled !== true) {
           onPress(event);
